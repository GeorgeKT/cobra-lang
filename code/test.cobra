
interface Product {
    product(self) -> int
}

interface Sum {
    sum(self) -> int
}

interface Default {
    default() -> Self
}

type Point {
    x: int,
    y: int,
}

Point.sum(self) -> int {
    self.x + self.y
}


Point.product(self) -> int {
    self.x * self.y
}


foo(x: $(Product + Sum)) -> int {
    x.product() + x.sum()
}

let FOO = 77;

main() -> int {
    let p = Point{7, 8};
    foo(p) + FOO
}
